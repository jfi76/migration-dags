[{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"inititate_testing","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"inititate_testing","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[inititate_testing]\r\n@t_testing_id uniqueidentifier,\r\n@t_workstation_id uniqueidentifier,\r\n@t_persona_id uniqueidentifier,\r\n@t_testing_language_id uniqueidentifier,\r\n@t_testing_classificator_id uniqueidentifier,\r\n@obj_created_by varchar(100),\r\n@passw nvarchar(20)\r\n\r\nas \r\ndeclare @auth_type nvarchar(20)\r\nSET XACT_ABORT ON;\r\nbegin transaction \r\ninsert into t_testing(\r\nt_testing_id ,\r\nt_workstation_id ,\r\nt_persona_id ,\r\nt_testing_language_id ,\r\nt_testing_classificator_id ,\r\nobj_created_by,\r\nt_testing_status_id\r\n)\r\nvalues\r\n(\r\n@t_testing_id ,\r\n@t_workstation_id ,\r\n@t_persona_id ,\r\n@t_testing_language_id ,\r\n@t_testing_classificator_id ,\r\n@obj_created_by,\r\n4\r\n)\r\n\r\nupdate t_workstation\r\nset t_testing_id = @t_testing_id\r\nwhere t_workstation_id=@t_workstation_id\r\n\r\nselect @auth_type = auth_type\r\nfrom t_workstation\r\nwhere t_workstation_id=@t_workstation_id\r\n\r\nif @auth_type =1 \r\n  update t_workstation\r\n  set passw = @passw\r\n  where t_workstation_id=@t_workstation_id\r\n  \r\n\r\ncommit transaction\r\nSET XACT_ABORT OFF;","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-02-26T21:45:21.980","LAST_ALTERED":"2010-11-30T09:46:25.757"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"inititate_testing2","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"inititate_testing2","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[inititate_testing2]\r\n@t_testing_id uniqueidentifier\r\nas \r\n\r\ninsert into t_testing_step(t_testing_id, t_test_step_id)\r\nselect @t_testing_id,ts.t_test_step_id\r\nfrom t_testing_test t inner join t_test_step ts\r\non t.t_test_id=ts.t_test_id\r\nwhere t.t_testing_id=@t_testing_id\r\n\r\n--order by te.order_num ts.step_order","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-09T13:23:53.253","LAST_ALTERED":"2010-11-30T09:46:25.803"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"get_test_introduction","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"get_test_introduction","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure get_test_introduction\r\n@lang_num int,\r\n@t_test_id uniqueidentifier\r\nas \r\n\r\n\r\nselect \r\ncase @lang_num\r\nwhen 2  then page_usr_text_lang2\r\nwhen 3  then page_usr_text_lang3\r\nelse page_usr_text_lang1\r\n\r\nend \r\nas PAGE_USR_TEXT\r\nfrom t_test\r\nwhere t_test_id=@t_test_id","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-09T15:05:36.877","LAST_ALTERED":"2010-11-30T09:46:25.817"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"stat_change_instruct","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"stat_change_instruct","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[stat_change_instruct]\r\n@t_testing_id uniqueidentifier\r\n\r\nas \r\ndeclare @status varchar(10) \r\ndeclare @t_test_id uniqueidentifier\r\ndeclare @step_order int\r\ndeclare @current_step_id uniqueidentifier\r\n\r\nSET XACT_ABORT ON;\r\nbegin transaction \r\n\r\n\r\nselect @status=obj_name from t_testing_status ts\r\ninner join t_testing t on ts.t_testing_status_id = t.t_testing_status_id\r\nwhere  t.t_testing_id = @t_testing_id\r\n\r\n\r\nif @status='INSTRUCT'\r\nbegin\r\n  \r\n  select @t_test_id=t_test_id\r\n  \r\n  from   t_test\r\n  where order_num =\r\n  (\r\n  select min(order_num) \r\n  from t_testing_test tt inner join t_test te\r\n    on tt.t_test_id= te.t_test_id\r\n    where tt.t_testing_test_status_id = 4\r\n    and tt.t_testing_id = @t_testing_id\r\n  )\r\n  \r\n  update  t_testing \r\n  set t_testing_status_id = 1,\r\n  current_test_id = @t_test_id\r\n  where t_testing_id = @t_testing_id\r\n \r\n  \r\n\r\n  select @step_order=min(step_order)\r\n  from t_test_step \r\n  where t_test_id=@t_test_id \r\n  \r\n  select @current_step_id= t_test_step_id\r\n  from t_test_step\r\n  where t_test_id=@t_test_id \r\n  and step_order=@step_order\r\n\r\n  update t_testing_test\r\n  set current_step_id=@current_step_id,\r\n  t_testing_test_status_id=1\r\n  where t_testing_id = @t_testing_id\r\n  and t_test_id=@t_test_id\r\n  \r\n  update  \r\n  t_testing_step \r\n  set \r\n  t_testing_step_status_id = 1,\r\n  view_date=getdate()\r\n  where t_test_step_id=@current_step_id\r\n    and t_testing_id = @t_testing_id\r\n\r\n  update  t_testing\r\n  set start_date=getdate()\r\n  where t_testing_id = @t_testing_id\r\n  and start_date is null   \r\n\r\nend \r\n\r\n\r\ncommit transaction\r\nSET XACT_ABORT OFF;","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-09T16:11:17.210","LAST_ALTERED":"2010-11-30T09:46:25.817"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"get_test_step","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"get_test_step","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[get_test_step]\r\n@lang_num int,\r\n@current_step_id uniqueidentifier,\r\n@t_testing_id uniqueidentifier\r\nas \r\n\r\n\r\nselect \r\ncase @lang_num\r\nwhen 2  then ts.page_usr_text_lang2\r\nwhen 3  then ts.page_usr_text_lang3\r\nelse ts.page_usr_text_lang1\r\n\r\nend \r\nas PAGE_USR_TEXT,\r\ntt.result_txt\r\nfrom t_test_step ts inner join t_testing_step tt \r\non ts.t_test_step_id=tt.t_test_step_id\r\nwhere ts.t_test_step_id=@current_step_id and tt.t_testing_id=@t_testing_id","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-11T15:51:06.620","LAST_ALTERED":"2010-11-30T09:46:25.880"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"donext","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"donext","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[donext]\r\n@t_testing_id uniqueidentifier,\r\n@result_txt nvarchar(1000),\r\n@t_testing_step_id uniqueidentifier\r\n\r\nas \r\n\r\nSET XACT_ABORT ON;\r\nbegin transaction \r\n\r\n\r\ndeclare @current_step_id uniqueidentifier\r\ndeclare @t_test_id uniqueidentifier \r\ndeclare @next_step_id uniqueidentifier\r\ndeclare @seconds_remain int \r\n\r\nselect @current_step_id=current_step_id\r\nfrom t_testing t inner join\r\nt_testing_test tt on\r\nt.t_testing_id=tt.t_testing_id\r\nand t.current_test_id = tt.t_test_id\r\nwhere t.t_testing_id=@t_testing_id\r\n\r\nif @current_step_id=@t_testing_step_id\r\nbegin\r\n \r\n set @t_test_id = (select current_test_id from t_testing  where t_testing_id=@t_testing_id )\r\n\/* try timelimit *\/\r\nexec time_remaining\r\n@t_testing_id , \r\n@t_test_id ,\r\n@seconds_remain  output \r\n\r\n\r\nif @seconds_remain<0 \r\nbegin\r\n\r\n exec stat_change_testing  \r\n    @t_testing_id ,\r\n    @t_test_id \r\n\r\n\r\n    RAISERROR ('TIME IS EXPIRED! ANSWER NOT ACCEPTED!',16,1,0) with log             \r\n    commit transaction\r\n    return\r\n\r\nend \r\n\r\n\r\n \/* save result and change status to end  *\/\r\n update  \r\n t_testing_step \r\n set RESULT_TXT=@result_txt,\r\n t_testing_step_status_id = 3,\r\n result_date=getdate() \r\n where t_test_step_id=@current_step_id\r\n    and t_testing_id = @t_testing_id\r\n \r\n\/* what is th next test step?  *\/\r\n set @next_step_id = NULL \r\n\r\n exec  get_next_step_id \r\n  @current_step_id ,\r\n  @next_step_id OUTPUT\r\n\r\n\/* if step exists  change current_step_id *\/\r\n if  @next_step_id is not null \r\n   begin\r\n    update t_testing_test\r\n    set current_step_id=@next_step_id\r\n    \r\n    where t_testing_id = @t_testing_id\r\n    and t_test_id=@t_test_id\r\n\r\n    update  \r\n    t_testing_step \r\n    set \r\n    t_testing_step_status_id = 1,\r\n    view_date=getdate()\r\n    where t_test_step_id=@next_step_id\r\n    and t_testing_id = @t_testing_id\r\n  end\r\n\r\n    \r\n else\r\n\/* if step does not exists  exec procedure to finish current test and \r\npossibly all testing *\/\r\n  \r\n exec stat_change_testing  \r\n    @t_testing_id ,\r\n    @t_test_id \r\n   \r\n \r\n\r\n  \r\nend \r\n\/* in case of attemtp to change not current step ERROR message *\/\r\nelse \r\nRAISERROR ('CURRENT STEP ID DOES NOT EQUIL PROPOSED! ANSWER NOT ACCEPTED!',16,1,0) with log             \r\n\r\ncommit transaction\r\nSET XACT_ABORT OFF;","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-11T18:04:20.693","LAST_ALTERED":"2010-11-30T09:46:25.880"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"tmp_insupd_test_step","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"tmp_insupd_test_step","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[tmp_insupd_test_step] @t_test_id uniqueidentifier\r\nas \r\nUPDATE [dbo].[T_TEST_STEP]\r\n   SET [STEP_NUM] = t2.STEP_NUM,\r\n      [STEP_ORDER] = t2.STEP_ORDER,\r\n      [PAGE_USR_TEXT_LANG1] = t2.PAGE_USR_TEXT_LANG1,\r\n      [PAGE_USR_TEXT_LANG2] = t2.PAGE_USR_TEXT_LANG2,\r\n      [PAGE_USR_TEXT_LANG3] = t2.PAGE_USR_TEXT_LANG3,\r\n\r\n      [T_TEST_STEP_JS_FILE_ID] = t2.T_TEST_STEP_JS_FILE_ID,\r\n      [ACTUAL_MARK] = t2.ACTUAL_MARK\r\n from t_test_step t1 \r\n inner join tmp_t_test_step t2 on t1.t_test_step_id = t2.t_test_step_id \r\n WHERE t2.t_test_id = @t_test_id\r\n\r\nINSERT INTO [dbo].[T_TEST_STEP]\r\n           ([STEP_NUM]\r\n           ,[OBJ_CREATED]\r\n           ,[OBJ_CREATED_BY]\r\n           ,[STEP_ORDER]\r\n           ,[PAGE_USR_TEXT_LANG1]\r\n           ,[PAGE_USR_TEXT_LANG2]\r\n           ,[PAGE_USR_TEXT_LANG3]\r\n           ,[T_TEST_ID]\r\n           ,[T_TEST_STEP_ID]\r\n           ,[T_TEST_STEP_JS_FILE_ID]\r\n           ,[ACTUAL_MARK])\r\nselect \r\n           t2.STEP_NUM,\r\n           getdate(),\r\n           t2.OBJ_CREATED_BY,\r\n           t2.STEP_ORDER,\r\n           t2.PAGE_USR_TEXT_LANG1,\r\n           t2.PAGE_USR_TEXT_LANG2,\r\n           t2.PAGE_USR_TEXT_LANG3,\r\n           t2.T_TEST_ID,\r\n           t2.T_TEST_STEP_ID,\r\n\t   t2.T_TEST_STEP_JS_FILE_ID,\r\n           t2.ACTUAL_MARK\r\nfrom tmp_t_test_step t2 \r\nwhere t2.t_test_id = @t_test_id \r\nand t2.t_test_step_id not in (\r\nselect t1.t_test_step_id from t_test_step t1 \r\n)","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2011-06-05T14:32:19.653","LAST_ALTERED":"2011-06-05T14:32:19.653"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"temp_insupd_test","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"temp_insupd_test","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"create procedure [dbo].[temp_insupd_test] @t_test_id uniqueidentifier  \r\nas\r\n \r\n\tUPDATE [dbo].[T_TEST]\r\n\t   SET [OBJ_NAME] = t2.OBJ_NAME,\r\n\t\t  [TIMELIMITMIN] = t2.TIMELIMITMIN,\r\n\t\t  [ORDER_NUM] = t2.ORDER_NUM,\r\n\t\t  [ACTUAL_MARK] = t2.ACTUAL_MARK,\r\n\t\t  [T_TEST_ID] = t2.T_TEST_ID,\r\n\t\t  [NOTES_LANG1] = t2.NOTES_LANG1,\r\n\t\t  [PAGE_USR_TEXT_LANG1] = t2.PAGE_USR_TEXT_LANG1,\r\n\t\t  [PAGE_USR_TEXT_LANG2] = t2.PAGE_USR_TEXT_LANG2,\r\n\t\t  [PAGE_USR_TEXT_LANG3] = t2.PAGE_USR_TEXT_LANG3,\r\n\t\t  [NOTES_LANG2] = t2.NOTES_LANG2, \r\n\t\t  [NOTES_LANG3] = t2.NOTES_LANG3, \r\n\t\t  [BACK_BTN_MARK] = t2.BACK_BTN_MARK,\r\n\t\t  [USER_QUESTION_MARK] = t2.USER_QUESTION_MARK,\r\n\t\t  [BACK_ONLY_1_STEP] = t2.BACK_ONLY_1_STEP,\r\n\t\t  [STOP_TIMES] = t2.STOP_TIMES, \r\n\t\t  [SHOW_QUESTION_MARK] = t2.SHOW_QUESTION_MARK\r\n\tfrom T_TEST t1\r\n\tinner join tmp_t_test t2 on t1.t_test_id = t2.t_test_id\r\n\tWHERE t2.t_test_id = @t_test_id\r\n\r\nINSERT INTO [dbo].[T_TEST]\r\n           ([OBJ_NAME]\r\n           ,[OBJ_CREATED]\r\n           ,[OBJ_CREATED_BY]\r\n           ,[TIMELIMITMIN]\r\n           ,[ORDER_NUM]\r\n           ,[ACTUAL_MARK]\r\n           ,[T_TEST_ID]\r\n           ,[NOTES_LANG1]\r\n           ,[PAGE_USR_TEXT_LANG1]\r\n           ,[PAGE_USR_TEXT_LANG2]\r\n           ,[PAGE_USR_TEXT_LANG3]\r\n           ,[NOTES_LANG2]\r\n           ,[NOTES_LANG3]\r\n           ,[BACK_BTN_MARK]\r\n           ,[USER_QUESTION_MARK]\r\n           ,[BACK_ONLY_1_STEP]\r\n           ,[STOP_TIMES]\r\n           ,[SHOW_QUESTION_MARK])\r\nselect     \r\n           t2.OBJ_NAME,\r\n           getdate(),\r\n           t2.OBJ_CREATED_BY,\r\n           t2.TIMELIMITMIN,\r\n           t2.ORDER_NUM,\r\n           t2.ACTUAL_MARK,\r\n           t2.T_TEST_ID,\r\n           t2.NOTES_LANG1,\r\n           t2.PAGE_USR_TEXT_LANG1,\r\n           t2.PAGE_USR_TEXT_LANG2,\r\n           t2.PAGE_USR_TEXT_LANG3,\r\n           t2.NOTES_LANG2,\r\n           t2.NOTES_LANG3,\r\n           t2.BACK_BTN_MARK,\r\n           t2.USER_QUESTION_MARK,\r\n           t2.BACK_ONLY_1_STEP,\r\n           t2.STOP_TIMES,\r\n           t2.SHOW_QUESTION_MARK\r\n\tfrom \r\n\ttmp_t_test t2 \r\n\tWHERE t2.t_test_id = @t_test_id\r\n    and t2.t_test_id not in (select t1.t_test_id from T_TEST t1)","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2011-06-05T14:32:19.700","LAST_ALTERED":"2011-06-05T14:32:19.700"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"insupd_score","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"insupd_score","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure dbo.insupd_score \r\n@t_testing_step_id uniqueidentifier ,\r\n@score nvarchar(50)\r\n\r\nas\r\ndeclare @t_testing_score_id uniqueidentifier \r\n\r\nset @t_testing_score_id = NULL \r\n\r\nselect @t_testing_score_id=t_testing_score_id\r\nfrom t_testing_score \r\nwhere t_testing_step_id = @t_testing_step_id\r\n\r\nif @t_testing_score_id is null \r\ninsert into t_testing_score (t_testing_score_id,score,t_testing_step_id)\r\nvalues (newid(),@score,@t_testing_step_id )\r\nelse \r\nupdate t_testing_score set score = @score\r\nwhere t_testing_score_id = @t_testing_score_id","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2011-06-05T14:32:19.750","LAST_ALTERED":"2011-06-05T14:32:19.750"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"get_next_step_id","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"get_next_step_id","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure get_next_step_id \r\n@current_step_id uniqueidentifier,\r\n@next_step_id uniqueidentifier OUTPUT\r\n\r\nas \r\n\r\ndeclare @t_test_id uniqueidentifier\r\ndeclare @step_order int\r\ndeclare @next_step_order int\r\n\r\n\r\n\r\nselect @t_test_id = t_test_id, @step_order=step_order\r\nfrom t_test_step \r\nwhere t_test_step_id = @current_step_id\r\n\r\n\r\nselect @next_step_order=min(step_order)\r\nfrom t_test_step\r\nwhere t_test_id=@t_test_id and step_order>@step_order\r\n\r\nif (@next_step_order is not null) and (@next_step_order>@step_order)\r\nbegin\r\n  select @next_step_id=t_test_step_id\r\n  from t_test_step\r\n  where t_test_id=@t_test_id and step_order=@next_step_order\r\n\r\nend\r\nelse \r\nset @next_step_id = null","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-12T14:44:37.697","LAST_ALTERED":"2010-11-30T09:46:25.897"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"stat_change_testing","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"stat_change_testing","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[stat_change_testing]  \r\n@t_testing_id uniqueidentifier,\r\n@curent_test_id uniqueidentifier\r\nas \r\n\r\ndeclare @next_test_id uniqueidentifier\r\n\r\nupdate t_testing_test\r\nset t_testing_test_status_id = 3  \r\nwhere t_testing_id = @t_testing_id\r\nand t_test_id=@curent_test_id\r\nand current_step_id=NULL\r\n\r\n\r\nselect @next_test_id=t_test_id\r\n  \r\n  from   t_test\r\n  where order_num =\r\n  (\r\n  select min(order_num) \r\n  from t_testing_test tt inner join t_test te\r\n    on tt.t_test_id= te.t_test_id\r\n    where tt.t_testing_test_status_id = 4\r\n    and tt.t_testing_id = @t_testing_id\r\n  )\r\n\r\n\/* updating test status *\/\r\nupdate t_testing_test\r\nset t_testing_test_status_id = 3\r\nwhere \r\nt_test_id=@curent_test_id and \r\nt_testing_id = @t_testing_id\r\n\r\n\/* updating testing status  *\/\r\n\/* if still exists atleast 1 not finished test status INSTRUCT  *\/\r\nif @next_test_id is not null   \r\n  begin \r\n    update  t_testing \r\n    set t_testing_status_id = 5,\r\n    current_test_id = @next_test_id\r\n    where t_testing_id = @t_testing_id\r\n \r\n  end \r\n\/* if no tests to go status ENDED  *\/\r\n  else \r\n\r\n    update  t_testing \r\n    set t_testing_status_id = 3,\r\n    current_test_id = null\r\n    where t_testing_id = @t_testing_id","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-12T15:46:47.713","LAST_ALTERED":"2010-11-30T09:46:25.927"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"get_common_ended","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"get_common_ended","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"create procedure [dbo].[get_common_ended]\r\n@t_testing_id uniqueidentifier\r\nas \r\nselect PAGE_USR_TEXT_ENDED\r\nfrom t_testing_language tl \r\ninner join t_testing t on\r\ntl.t_testing_language_id = t.t_testing_language_id\r\nwhere t.t_testing_id = @t_testing_id","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-15T12:14:37.973","LAST_ALTERED":"2010-11-30T09:46:25.943"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"sp_upgraddiagrams","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"sp_upgraddiagrams","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"\tCREATE PROCEDURE dbo.sp_upgraddiagrams\r\n\tAS\r\n\tBEGIN\r\n\t\tIF OBJECT_ID(N'dbo.sysdiagrams') IS NOT NULL\r\n\t\t\treturn 0;\r\n\t\r\n\t\tCREATE TABLE dbo.sysdiagrams\r\n\t\t(\r\n\t\t\tname sysname NOT NULL,\r\n\t\t\tprincipal_id int NOT NULL,\t-- we may change it to varbinary(85)\r\n\t\t\tdiagram_id int PRIMARY KEY IDENTITY,\r\n\t\t\tversion int,\r\n\t\r\n\t\t\tdefinition varbinary(max)\r\n\t\t\tCONSTRAINT UK_principal_name UNIQUE\r\n\t\t\t(\r\n\t\t\t\tprincipal_id,\r\n\t\t\t\tname\r\n\t\t\t)\r\n\t\t);\r\n\r\n\r\n\t\t\/* Add this if we need to have some form of extended properties for diagrams *\/\r\n\t\t\/*\r\n\t\tIF OBJECT_ID(N'dbo.sysdiagram_properties') IS NULL\r\n\t\tBEGIN\r\n\t\t\tCREATE TABLE dbo.sysdiagram_properties\r\n\t\t\t(\r\n\t\t\t\tdiagram_id int,\r\n\t\t\t\tname sysname,\r\n\t\t\t\tvalue varbinary(max) NOT NULL\r\n\t\t\t)\r\n\t\tEND\r\n\t\t*\/\r\n\r\n\t\tIF OBJECT_ID(N'dbo.dtproperties') IS NOT NULL\r\n\t\tbegin\r\n\t\t\tinsert into dbo.sysdiagrams\r\n\t\t\t(\r\n\t\t\t\t[name],\r\n\t\t\t\t[principal_id],\r\n\t\t\t\t[version],\r\n\t\t\t\t[definition]\r\n\t\t\t)\r\n\t\t\tselect\t \r\n\t\t\t\tconvert(sysname, dgnm.[uvalue]),\r\n\t\t\t\tDATABASE_PRINCIPAL_ID(N'dbo'),\t\t\t-- will change to the sid of sa\r\n\t\t\t\t0,\t\t\t\t\t\t\t-- zero for old format, dgdef.[version],\r\n\t\t\t\tdgdef.[lvalue]\r\n\t\t\tfrom dbo.[dtproperties] dgnm\r\n\t\t\t\tinner join dbo.[dtproperties] dggd on dggd.[property] = 'DtgSchemaGUID' and dggd.[objectid] = dgnm.[objectid]\t\r\n\t\t\t\tinner join dbo.[dtproperties] dgdef on dgdef.[property] = 'DtgSchemaDATA' and dgdef.[objectid] = dgnm.[objectid]\r\n\t\t\t\t\r\n\t\t\twhere dgnm.[property] = 'DtgSchemaNAME' and dggd.[uvalue] like N'_EA3E6268-D998-11CE-9454-00AA00A3F36E_' \r\n\t\t\treturn 2;\r\n\t\tend\r\n\t\treturn 1;\r\n\tEND\r\n\t","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2009-12-08T14:23:03.143","LAST_ALTERED":"2010-11-30T09:46:25.990"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"sp_helpdiagrams","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"sp_helpdiagrams","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"\tCREATE PROCEDURE dbo.sp_helpdiagrams\r\n\t(\r\n\t\t@diagramname sysname = NULL,\r\n\t\t@owner_id int = NULL\r\n\t)\r\n\tWITH EXECUTE AS N'dbo'\r\n\tAS\r\n\tBEGIN\r\n\t\tDECLARE @user sysname\r\n\t\tDECLARE @dboLogin bit\r\n\t\tEXECUTE AS CALLER;\r\n\t\t\tSET @user = USER_NAME();\r\n\t\t\tSET @dboLogin = CONVERT(bit,IS_MEMBER('db_owner'));\r\n\t\tREVERT;\r\n\t\tSELECT\r\n\t\t\t[Database] = DB_NAME(),\r\n\t\t\t[Name] = name,\r\n\t\t\t[ID] = diagram_id,\r\n\t\t\t[Owner] = USER_NAME(principal_id),\r\n\t\t\t[OwnerID] = principal_id\r\n\t\tFROM\r\n\t\t\tsysdiagrams\r\n\t\tWHERE\r\n\t\t\t(@dboLogin = 1 OR USER_NAME(principal_id) = @user) AND\r\n\t\t\t(@diagramname IS NULL OR name = @diagramname) AND\r\n\t\t\t(@owner_id IS NULL OR principal_id = @owner_id)\r\n\t\tORDER BY\r\n\t\t\t4, 5, 1\r\n\tEND\r\n\t","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2009-12-08T14:23:03.183","LAST_ALTERED":"2010-11-30T09:46:26.020"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"sp_helpdiagramdefinition","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"sp_helpdiagramdefinition","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"\tCREATE PROCEDURE dbo.sp_helpdiagramdefinition\r\n\t(\r\n\t\t@diagramname \tsysname,\r\n\t\t@owner_id\tint\t= null \t\t\r\n\t)\r\n\tWITH EXECUTE AS N'dbo'\r\n\tAS\r\n\tBEGIN\r\n\t\tset nocount on\r\n\r\n\t\tdeclare @theId \t\tint\r\n\t\tdeclare @IsDbo \t\tint\r\n\t\tdeclare @DiagId\t\tint\r\n\t\tdeclare @UIDFound\tint\r\n\t\r\n\t\tif(@diagramname is null)\r\n\t\tbegin\r\n\t\t\tRAISERROR (N'E_INVALIDARG', 16, 1);\r\n\t\t\treturn -1\r\n\t\tend\r\n\t\r\n\t\texecute as caller;\r\n\t\tselect @theId = DATABASE_PRINCIPAL_ID();\r\n\t\tselect @IsDbo = IS_MEMBER(N'db_owner');\r\n\t\tif(@owner_id is null)\r\n\t\t\tselect @owner_id = @theId;\r\n\t\trevert; \r\n\t\r\n\t\tselect @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname;\r\n\t\tif(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId ))\r\n\t\tbegin\r\n\t\t\tRAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);\r\n\t\t\treturn -3\r\n\t\tend\r\n\r\n\t\tselect version, definition FROM dbo.sysdiagrams where diagram_id = @DiagId ; \r\n\t\treturn 0\r\n\tEND\r\n\t","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2009-12-08T14:23:03.193","LAST_ALTERED":"2010-11-30T09:46:26.020"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"sp_creatediagram","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"sp_creatediagram","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"\tCREATE PROCEDURE dbo.sp_creatediagram\r\n\t(\r\n\t\t@diagramname \tsysname,\r\n\t\t@owner_id\t\tint\t= null, \t\r\n\t\t@version \t\tint,\r\n\t\t@definition \tvarbinary(max)\r\n\t)\r\n\tWITH EXECUTE AS 'dbo'\r\n\tAS\r\n\tBEGIN\r\n\t\tset nocount on\r\n\t\r\n\t\tdeclare @theId int\r\n\t\tdeclare @retval int\r\n\t\tdeclare @IsDbo\tint\r\n\t\tdeclare @userName sysname\r\n\t\tif(@version is null or @diagramname is null)\r\n\t\tbegin\r\n\t\t\tRAISERROR (N'E_INVALIDARG', 16, 1);\r\n\t\t\treturn -1\r\n\t\tend\r\n\t\r\n\t\texecute as caller;\r\n\t\tselect @theId = DATABASE_PRINCIPAL_ID(); \r\n\t\tselect @IsDbo = IS_MEMBER(N'db_owner');\r\n\t\trevert; \r\n\t\t\r\n\t\tif @owner_id is null\r\n\t\tbegin\r\n\t\t\tselect @owner_id = @theId;\r\n\t\tend\r\n\t\telse\r\n\t\tbegin\r\n\t\t\tif @theId <> @owner_id\r\n\t\t\tbegin\r\n\t\t\t\tif @IsDbo = 0\r\n\t\t\t\tbegin\r\n\t\t\t\t\tRAISERROR (N'E_INVALIDARG', 16, 1);\r\n\t\t\t\t\treturn -1\r\n\t\t\t\tend\r\n\t\t\t\tselect @theId = @owner_id\r\n\t\t\tend\r\n\t\tend\r\n\t\t-- next 2 line only for test, will be removed after define name unique\r\n\t\tif EXISTS(select diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @diagramname)\r\n\t\tbegin\r\n\t\t\tRAISERROR ('The name is already used.', 16, 1);\r\n\t\t\treturn -2\r\n\t\tend\r\n\t\r\n\t\tinsert into dbo.sysdiagrams(name, principal_id , version, definition)\r\n\t\t\t\tVALUES(@diagramname, @theId, @version, @definition) ;\r\n\t\t\r\n\t\tselect @retval = @@IDENTITY \r\n\t\treturn @retval\r\n\tEND\r\n\t","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2009-12-08T14:23:03.383","LAST_ALTERED":"2010-11-30T09:46:26.037"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"sp_renamediagram","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"sp_renamediagram","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"\tCREATE PROCEDURE dbo.sp_renamediagram\r\n\t(\r\n\t\t@diagramname \t\tsysname,\r\n\t\t@owner_id\t\tint\t= null,\r\n\t\t@new_diagramname\tsysname\r\n\t\r\n\t)\r\n\tWITH EXECUTE AS 'dbo'\r\n\tAS\r\n\tBEGIN\r\n\t\tset nocount on\r\n\t\tdeclare @theId \t\t\tint\r\n\t\tdeclare @IsDbo \t\t\tint\r\n\t\t\r\n\t\tdeclare @UIDFound \t\tint\r\n\t\tdeclare @DiagId\t\t\tint\r\n\t\tdeclare @DiagIdTarg\t\tint\r\n\t\tdeclare @u_name\t\t\tsysname\r\n\t\tif((@diagramname is null) or (@new_diagramname is null))\r\n\t\tbegin\r\n\t\t\tRAISERROR ('Invalid value', 16, 1);\r\n\t\t\treturn -1\r\n\t\tend\r\n\t\r\n\t\tEXECUTE AS CALLER;\r\n\t\tselect @theId = DATABASE_PRINCIPAL_ID();\r\n\t\tselect @IsDbo = IS_MEMBER(N'db_owner'); \r\n\t\tif(@owner_id is null)\r\n\t\t\tselect @owner_id = @theId;\r\n\t\tREVERT;\r\n\t\r\n\t\tselect @u_name = USER_NAME(@owner_id)\r\n\t\r\n\t\tselect @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname \r\n\t\tif(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))\r\n\t\tbegin\r\n\t\t\tRAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)\r\n\t\t\treturn -3\r\n\t\tend\r\n\t\r\n\t\t-- if((@u_name is not null) and (@new_diagramname = @diagramname))\t-- nothing will change\r\n\t\t--\treturn 0;\r\n\t\r\n\t\tif(@u_name is null)\r\n\t\t\tselect @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @new_diagramname\r\n\t\telse\r\n\t\t\tselect @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @owner_id and name = @new_diagramname\r\n\t\r\n\t\tif((@DiagIdTarg is not null) and  @DiagId <> @DiagIdTarg)\r\n\t\tbegin\r\n\t\t\tRAISERROR ('The name is already used.', 16, 1);\r\n\t\t\treturn -2\r\n\t\tend\t\t\r\n\t\r\n\t\tif(@u_name is null)\r\n\t\t\tupdate dbo.sysdiagrams set [name] = @new_diagramname, principal_id = @theId where diagram_id = @DiagId\r\n\t\telse\r\n\t\t\tupdate dbo.sysdiagrams set [name] = @new_diagramname where diagram_id = @DiagId\r\n\t\treturn 0\r\n\tEND\r\n\t","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2009-12-08T14:23:03.393","LAST_ALTERED":"2010-11-30T09:46:26.037"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"sp_alterdiagram","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"sp_alterdiagram","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"\tCREATE PROCEDURE dbo.sp_alterdiagram\r\n\t(\r\n\t\t@diagramname \tsysname,\r\n\t\t@owner_id\tint\t= null,\r\n\t\t@version \tint,\r\n\t\t@definition \tvarbinary(max)\r\n\t)\r\n\tWITH EXECUTE AS 'dbo'\r\n\tAS\r\n\tBEGIN\r\n\t\tset nocount on\r\n\t\r\n\t\tdeclare @theId \t\t\tint\r\n\t\tdeclare @retval \t\tint\r\n\t\tdeclare @IsDbo \t\t\tint\r\n\t\t\r\n\t\tdeclare @UIDFound \t\tint\r\n\t\tdeclare @DiagId\t\t\tint\r\n\t\tdeclare @ShouldChangeUID\tint\r\n\t\r\n\t\tif(@diagramname is null)\r\n\t\tbegin\r\n\t\t\tRAISERROR ('Invalid ARG', 16, 1)\r\n\t\t\treturn -1\r\n\t\tend\r\n\t\r\n\t\texecute as caller;\r\n\t\tselect @theId = DATABASE_PRINCIPAL_ID();\t \r\n\t\tselect @IsDbo = IS_MEMBER(N'db_owner'); \r\n\t\tif(@owner_id is null)\r\n\t\t\tselect @owner_id = @theId;\r\n\t\trevert;\r\n\t\r\n\t\tselect @ShouldChangeUID = 0\r\n\t\tselect @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname \r\n\t\t\r\n\t\tif(@DiagId IS NULL or (@IsDbo = 0 and @theId <> @UIDFound))\r\n\t\tbegin\r\n\t\t\tRAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);\r\n\t\t\treturn -3\r\n\t\tend\r\n\t\r\n\t\tif(@IsDbo <> 0)\r\n\t\tbegin\r\n\t\t\tif(@UIDFound is null or USER_NAME(@UIDFound) is null) -- invalid principal_id\r\n\t\t\tbegin\r\n\t\t\t\tselect @ShouldChangeUID = 1 ;\r\n\t\t\tend\r\n\t\tend\r\n\r\n\t\t-- update dds data\t\t\t\r\n\t\tupdate dbo.sysdiagrams set definition = @definition where diagram_id = @DiagId ;\r\n\r\n\t\t-- change owner\r\n\t\tif(@ShouldChangeUID = 1)\r\n\t\t\tupdate dbo.sysdiagrams set principal_id = @theId where diagram_id = @DiagId ;\r\n\r\n\t\t-- update dds version\r\n\t\tif(@version is not null)\r\n\t\t\tupdate dbo.sysdiagrams set version = @version where diagram_id = @DiagId ;\r\n\r\n\t\treturn 0\r\n\tEND\r\n\t","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2009-12-08T14:23:03.393","LAST_ALTERED":"2010-11-30T09:46:26.053"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"sp_dropdiagram","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"sp_dropdiagram","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"\tCREATE PROCEDURE dbo.sp_dropdiagram\r\n\t(\r\n\t\t@diagramname \tsysname,\r\n\t\t@owner_id\tint\t= null\r\n\t)\r\n\tWITH EXECUTE AS 'dbo'\r\n\tAS\r\n\tBEGIN\r\n\t\tset nocount on\r\n\t\tdeclare @theId \t\t\tint\r\n\t\tdeclare @IsDbo \t\t\tint\r\n\t\t\r\n\t\tdeclare @UIDFound \t\tint\r\n\t\tdeclare @DiagId\t\t\tint\r\n\t\r\n\t\tif(@diagramname is null)\r\n\t\tbegin\r\n\t\t\tRAISERROR ('Invalid value', 16, 1);\r\n\t\t\treturn -1\r\n\t\tend\r\n\t\r\n\t\tEXECUTE AS CALLER;\r\n\t\tselect @theId = DATABASE_PRINCIPAL_ID();\r\n\t\tselect @IsDbo = IS_MEMBER(N'db_owner'); \r\n\t\tif(@owner_id is null)\r\n\t\t\tselect @owner_id = @theId;\r\n\t\tREVERT; \r\n\t\t\r\n\t\tselect @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname \r\n\t\tif(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))\r\n\t\tbegin\r\n\t\t\tRAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)\r\n\t\t\treturn -3\r\n\t\tend\r\n\t\r\n\t\tdelete from dbo.sysdiagrams where diagram_id = @DiagId;\r\n\t\r\n\t\treturn 0;\r\n\tEND\r\n\t","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2009-12-08T14:23:03.393","LAST_ALTERED":"2010-11-30T09:46:26.053"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"fn_diagramobjects","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"fn_diagramobjects","ROUTINE_TYPE":"FUNCTION","DATA_TYPE":"int","NUMERIC_PRECISION":10,"NUMERIC_PRECISION_RADIX":10,"NUMERIC_SCALE":0,"ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"\tCREATE FUNCTION dbo.fn_diagramobjects() \r\n\tRETURNS int\r\n\tWITH EXECUTE AS N'dbo'\r\n\tAS\r\n\tBEGIN\r\n\t\tdeclare @id_upgraddiagrams\t\tint\r\n\t\tdeclare @id_sysdiagrams\t\t\tint\r\n\t\tdeclare @id_helpdiagrams\t\tint\r\n\t\tdeclare @id_helpdiagramdefinition\tint\r\n\t\tdeclare @id_creatediagram\tint\r\n\t\tdeclare @id_renamediagram\tint\r\n\t\tdeclare @id_alterdiagram \tint \r\n\t\tdeclare @id_dropdiagram\t\tint\r\n\t\tdeclare @InstalledObjects\tint\r\n\r\n\t\tselect @InstalledObjects = 0\r\n\r\n\t\tselect \t@id_upgraddiagrams = object_id(N'dbo.sp_upgraddiagrams'),\r\n\t\t\t@id_sysdiagrams = object_id(N'dbo.sysdiagrams'),\r\n\t\t\t@id_helpdiagrams = object_id(N'dbo.sp_helpdiagrams'),\r\n\t\t\t@id_helpdiagramdefinition = object_id(N'dbo.sp_helpdiagramdefinition'),\r\n\t\t\t@id_creatediagram = object_id(N'dbo.sp_creatediagram'),\r\n\t\t\t@id_renamediagram = object_id(N'dbo.sp_renamediagram'),\r\n\t\t\t@id_alterdiagram = object_id(N'dbo.sp_alterdiagram'), \r\n\t\t\t@id_dropdiagram = object_id(N'dbo.sp_dropdiagram')\r\n\r\n\t\tif @id_upgraddiagrams is not null\r\n\t\t\tselect @InstalledObjects = @InstalledObjects + 1\r\n\t\tif @id_sysdiagrams is not null\r\n\t\t\tselect @InstalledObjects = @InstalledObjects + 2\r\n\t\tif @id_helpdiagrams is not null\r\n\t\t\tselect @InstalledObjects = @InstalledObjects + 4\r\n\t\tif @id_helpdiagramdefinition is not null\r\n\t\t\tselect @InstalledObjects = @InstalledObjects + 8\r\n\t\tif @id_creatediagram is not null\r\n\t\t\tselect @InstalledObjects = @InstalledObjects + 16\r\n\t\tif @id_renamediagram is not null\r\n\t\t\tselect @InstalledObjects = @InstalledObjects + 32\r\n\t\tif @id_alterdiagram  is not null\r\n\t\t\tselect @InstalledObjects = @InstalledObjects + 64\r\n\t\tif @id_dropdiagram is not null\r\n\t\t\tselect @InstalledObjects = @InstalledObjects + 128\r\n\t\t\r\n\t\treturn @InstalledObjects \r\n\tEND\r\n\t","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"READS","IS_NULL_CALL":"NO","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":0,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2009-12-08T14:23:03.403","LAST_ALTERED":"2022-12-02T08:31:44.603"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"get_prev_step_id","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"get_prev_step_id","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"create procedure [dbo].[get_prev_step_id] \r\n@current_step_id uniqueidentifier,\r\n@prev_step_id uniqueidentifier OUTPUT\r\n\r\nas \r\n\r\ndeclare @t_test_id uniqueidentifier\r\ndeclare @step_order int\r\ndeclare @prev_step_order int\r\n\r\n\r\n\r\nselect @t_test_id = t_test_id, @step_order=step_order\r\nfrom t_test_step \r\nwhere t_test_step_id = @current_step_id\r\n\r\n\r\nselect @prev_step_order=max(step_order)\r\nfrom t_test_step\r\nwhere t_test_id=@t_test_id and step_order<@step_order\r\n\r\nif (@prev_step_order is not null) and (@prev_step_order<@step_order)\r\nbegin\r\n  select @prev_step_id=t_test_step_id\r\n  from t_test_step\r\n  where t_test_id=@t_test_id and step_order=@prev_step_order\r\n\r\nend\r\nelse \r\nset @prev_step_id = null","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-04-01T11:19:40.673","LAST_ALTERED":"2010-11-30T09:46:26.053"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"doback","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"doback","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[doback]\r\n@t_testing_id uniqueidentifier,\r\n@t_testing_step_id uniqueidentifier\r\n\r\nas \r\n\r\nSET XACT_ABORT ON;\r\nbegin transaction \r\n\r\n\r\ndeclare @current_step_id uniqueidentifier\r\ndeclare @t_test_id uniqueidentifier \r\ndeclare @prev_step_id uniqueidentifier\r\ndeclare @back_only_1_step char(1)\r\ndeclare @back_btn_mark char(1)\r\n\r\nselect @current_step_id=current_step_id\r\nfrom t_testing t inner join\r\nt_testing_test tt on\r\nt.t_testing_id=tt.t_testing_id\r\nand t.current_test_id = tt.t_test_id\r\nwhere t.t_testing_id=@t_testing_id\r\n\r\nif @current_step_id=@t_testing_step_id\r\nbegin\r\n \r\n set @t_test_id = (select current_test_id from t_testing  where t_testing_id=@t_testing_id )\r\n\r\n\/* what is th privious test step?  *\/\r\n set @prev_step_id = NULL \r\n \r\n select @back_only_1_step=back_only_1_step,\r\n @back_btn_mark=back_btn_mark\r\n from t_test \r\n where t_test_id = @t_test_id\r\n\/* in case if option back for test is disabled raise error  *\/\r\n if @back_btn_mark!='y' \r\n  begin \r\n    RAISERROR ('CURRENT TEST DOES NOT ALLOW BACK ACTION !',16,1,0) with log             \r\n    commit transaction\r\n    return \r\n  end\r\n\r\n  \r\n  \r\n    if (@back_only_1_step = 'y') AND (select LEN(result_txt) from t_testing_step \r\n         where t_testing_id=@t_testing_id and t_test_step_id=@current_step_id)>0 \r\n      begin\r\n        RAISERROR ('TEST DOES NOT ALLOW BACK MORE THEN ONCE !',16,1,0) with log             \r\n        commit transaction\r\n        return\r\n      end \r\n  \r\n\r\n exec  get_prev_step_id \r\n  @current_step_id ,\r\n  @prev_step_id OUTPUT\r\n\r\n\/* if step exists  change current_step_id *\/\r\n if  @prev_step_id is not null \r\n   begin\r\n    update t_testing_test\r\n    set current_step_id=@prev_step_id\r\n    \r\n    where t_testing_id = @t_testing_id\r\n    and t_test_id=@t_test_id\r\n\r\n    update  \r\n    t_testing_step \r\n    set \r\n    t_testing_step_status_id = 1,\r\n    view_date=getdate()\r\n    where t_test_step_id=@prev_step_id\r\n    and t_testing_id = @t_testing_id\r\n  end\r\n\r\n    \r\n  \r\nend \r\n\/* in case of attemtp to change not current step ERROR message *\/\r\nelse \r\nRAISERROR ('CURRENT STEP ID DOES NOT EQUIL PROPOSED! ANSWER NOT ACCEPTED!',16,1,0) with log             \r\n\r\ncommit transaction\r\nSET XACT_ABORT OFF;","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-04-01T11:23:16.127","LAST_ALTERED":"2010-11-30T09:46:26.053"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"time_remaining","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"time_remaining","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[time_remaining]\r\n@t_testing_id uniqueidentifier, \r\n@t_test_id uniqueidentifier,\r\n@seconds_remain int output  \r\nas \r\ndeclare @start_time datetime\r\ndeclare @STOP_TIME_SEC int\r\ndeclare @timelimitmin int \r\n\r\nset @timelimitmin=0\r\n\r\n\r\nselect @timelimitmin=isnull(timelimitmin,0)\r\nfrom t_test \r\nwhere t_test_id=@t_test_id\r\n\r\nif @timelimitmin>0\r\nbegin\r\n\r\n--set @seconds_remain=200\r\n\r\n\r\nselect  \r\n@start_time=min(isnull(ts.view_date,getdate()))\r\n--ts.view_date,\r\n,@STOP_TIME_SEC=min(isnull(tt.STOP_TIME_SEC,0))\r\nfrom t_testing_step ts\r\ninner join t_test_step s on ts.t_test_step_id=s.t_test_step_id\r\ninner join t_testing_test tt on s.t_test_id=tt.t_test_id \r\nwhere s.t_test_id=@t_test_id\r\nand ts.t_testing_id=@t_testing_id\r\nand tt.t_testing_id=@t_testing_id\r\n\r\n\r\nset @seconds_remain=datediff(second, getdate(), @start_time )- isnull(@STOP_TIME_SEC,0) + (60*@timelimitmin)\r\n\r\nend","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-04-01T15:58:13.430","LAST_ALTERED":"2010-11-30T09:46:26.053"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"stat_change_help","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"stat_change_help","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[stat_change_help]\r\n@t_testing_id uniqueidentifier\r\n\r\nas \r\ndeclare @status varchar(10) \r\ndeclare @t_test_id uniqueidentifier\r\n\r\ndeclare @stop_time_sec int\r\ndeclare @stop_times int\r\ndeclare @count_stop_times int\r\ndeclare @time_limit_min int\r\n\r\n\r\nset @stop_time_sec =0\r\nset @stop_times = 0\r\nset @count_stop_times =0\r\nset @time_limit_min=0\r\n\r\n\r\nSET XACT_ABORT ON;\r\nbegin transaction \r\n\r\n\r\nselect @status=obj_name from t_testing_status ts\r\ninner join t_testing t on ts.t_testing_status_id = t.t_testing_status_id\r\nwhere  t.t_testing_id = @t_testing_id\r\n\r\n\r\nif @status='TESTING'\r\nbegin\r\n\r\n\r\n\r\n\r\n  \r\n  select @t_test_id= current_test_id \r\n  from t_testing \r\n  where t_testing_id = @t_testing_id\r\n\r\n\r\n  select \r\n  @count_stop_times=tt.count_stop_times,\r\n  @stop_times=te.stop_times,\r\n  @time_limit_min=te.timelimitmin\r\n  from t_test te inner join t_testing_test tt\r\n  on te.t_test_id=tt.t_test_id \r\n  where te.t_test_id=@t_test_id and tt.t_testing_id=@t_testing_id \r\n\r\n\r\n  if  (@count_stop_times<@stop_times) and (@time_limit_min>0)\r\n  begin\r\n    \r\n    update  t_testing \r\n    set t_testing_status_id = 6    \r\n    where t_testing_id = @t_testing_id\r\n    \r\n   \r\n    update t_testing_test\r\n    set count_stop_times=count_stop_times+1,\r\n    t_testing_test_status_id=6,\r\n    current_stop_time=getdate()\r\n    where t_testing_id = @t_testing_id\r\n    and t_test_id=@t_test_id\r\n    \r\n  end   \r\n\r\nend \r\n\r\n\r\ncommit transaction\r\nSET XACT_ABORT OFF;","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-04-06T17:30:48.467","LAST_ALTERED":"2010-11-30T09:46:26.067"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"ws_type","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"ws_type","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[ws_type] \r\n@ip_address varchar(100),\r\n@ip_auth char(1) output,\r\n@t_workstation_id uniqueidentifier output,\r\n@t_testing_id uniqueidentifier output,\r\n@t_ws_status_id_active uniqueidentifier\r\n\r\nas \r\ndeclare @ws_ip_count int\r\nselect @ws_ip_count=count(t_workstation_id)\r\nfrom t_workstation \r\nwhere ip_address=@ip_address and \r\nt_workstation_status_id=@t_ws_status_id_active \r\nand auth_type=0\r\n\r\nif @ws_ip_count > 0 \r\nbegin\r\n\r\n   select \r\n   @t_workstation_id=t_workstation_id\r\n   ,@t_testing_id=t_testing_id,@ip_auth='y'\r\n   from t_workstation \r\n   where ip_address=@ip_address\r\n\r\nend \r\nelse \r\nbegin\r\n   select \r\n   @t_workstation_id=null\r\n   ,@t_testing_id=null,@ip_auth='n'\r\n\r\nend","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-02T17:53:19.130","LAST_ALTERED":"2010-11-30T09:46:26.083"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"stat_change_help2","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"stat_change_help2","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[stat_change_help2]\r\n@t_workstation_id uniqueidentifier\r\n\r\nas \r\ndeclare @status varchar(10) \r\ndeclare @t_test_id uniqueidentifier\r\ndeclare @current_step_id uniqueidentifier\r\ndeclare @t_testing_id uniqueidentifier\r\n\r\nSET XACT_ABORT ON;\r\nbegin transaction \r\n\r\nselect @t_testing_id=t_testing_id\r\nfrom t_workstation\r\nwhere t_workstation_id=@t_workstation_id\r\n\r\nselect @status=obj_name,\r\n@t_test_id=t.current_test_id \r\nfrom t_testing_status ts\r\ninner join t_testing t on ts.t_testing_status_id = t.t_testing_status_id\r\nwhere  t.t_testing_id = @t_testing_id\r\n\r\n\r\nif @status='HELP'\r\nbegin\r\n    \r\n  update  t_testing \r\n  set t_testing_status_id = 1\r\n  where t_testing_id = @t_testing_id\r\n   \r\n  select @current_step_id= current_step_id\r\n  from t_testing_test tt  \r\n  where t_test_id=@t_test_id and t_testing_id=@t_testing_id \r\n\r\n  --CURRENT_STOP_TIME STOP_TIME_SEC\r\n\r\n  update t_testing_test\r\n  set \r\n  count_stop_times=count_stop_times + 1,\r\n  STOP_TIME_SEC=datediff(second,getdate(),CURRENT_STOP_TIME )\r\n  where t_testing_id=@t_testing_id \r\n  \r\n  update  \r\n  t_testing_step \r\n  set \r\n  t_testing_step_status_id = 1  \r\n  where t_test_step_id=@current_step_id\r\n  and t_testing_id = @t_testing_id\r\n\r\n\r\nend \r\n\r\n\r\ncommit transaction\r\nSET XACT_ABORT OFF;","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-04-07T22:18:15.650","LAST_ALTERED":"2010-11-30T09:46:26.083"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"testing_status","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"testing_status","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[testing_status] \r\n@t_testing_id uniqueidentifier \r\n\r\n\r\nas \r\ndeclare @t_workstation_id uniqueidentifier\r\n\r\n\r\ndeclare @status varchar(10)\r\ndeclare @step int \r\ndeclare @test_num int \r\ndeclare @t_test_id uniqueidentifier \r\ndeclare @current_step_id uniqueidentifier \r\ndeclare @last_step_id uniqueidentifier \r\ndeclare @lang_num int \r\ndeclare @lang_short_code varchar(3) \r\ndeclare @firstname nvarchar(100) \r\ndeclare @secondname nvarchar(100) \r\ndeclare @perscode char(12) \r\ndeclare @test_name nvarchar(100) \r\ndeclare @step_num nvarchar(100) \r\ndeclare @step_count int\r\n\r\ndeclare @back_btn_mark char(1)\r\ndeclare @question_btn_mark char(1)\r\ndeclare @CURRENT_STOP_TIME datetime\r\ndeclare @stop_time_sec int\r\ndeclare @stop_times int\r\ndeclare @count_stop_times int\r\ndeclare @time_limit_min int\r\ndeclare @seconds_remain int\r\ndeclare @show_question_mark char(1)\r\ndeclare @jsfile varchar(50)\r\n\r\nset @back_btn_mark ='n'\r\nset @question_btn_mark  ='n'\r\nset @CURRENT_STOP_TIME =NULL\r\nset @stop_time_sec =0\r\nset @stop_times = 0\r\nset @count_stop_times =0\r\nset @time_limit_min=0\r\nset @seconds_remain=0\r\nset @show_question_mark = 'n'\r\n\r\nselect @t_workstation_id=t.t_workstation_id,\r\n@status=ts.obj_name  \r\nfrom t_testing t\r\ninner join t_testing_status ts \r\non t.t_testing_status_id = ts.t_testing_status_id \r\nwhere t_testing_id=@t_testing_id\r\n\r\n\r\nif @t_testing_id is null \r\nbegin\r\nset @status='FREE'\r\nend\r\nelse\r\nbegin\r\n select @status=obj_name from t_testing_status ts\r\n inner join t_testing t on ts.t_testing_status_id = t.t_testing_status_id\r\n where  t.t_testing_id = @t_testing_id\r\nend\r\n\r\n\r\n\r\nselect @lang_num= tl.lang_num,\r\n@lang_short_code= tl.lang_short_code\r\nfrom t_testing t \r\ninner join t_testing_language tl \r\non t.t_testing_language_id = tl.t_testing_language_id \r\nwhere t.t_testing_id=@t_testing_id\r\n\r\nselect \r\n@firstname = firstname,\r\n@secondname = secondname,\r\n@perscode = perscode\r\nfrom t_persona p \r\ninner join t_testing t on p.t_persona_id = t.t_persona_id\r\nwhere t.t_testing_id=@t_testing_id\r\n\r\nif @status='INSTRUCT'\r\nbegin\r\n  \r\n  select @t_test_id=t_test_id,@test_name=obj_name,@test_num=order_num\r\n  \r\n  from   t_test\r\n  where order_num =\r\n  (\r\n  select min(order_num) \r\n  from t_testing_test tt inner join t_test te\r\n  on tt.t_test_id= te.t_test_id\r\n  where tt.t_testing_test_status_id = 4\r\n  and tt.t_testing_id = @t_testing_id\r\n  )\r\n\r\n  select @test_name=obj_name,@test_num=order_num  \r\n  from t_test \r\n  where t_test_id=@t_test_id\r\n\r\n  select @step_count=count(t_test_step_id)  \r\n  from t_test_step \r\n  where t_test_id=@t_test_id\r\n      \r\n\r\nend\r\n\r\nif (@status='TESTING') OR (@status='HELP')\r\nbegin\r\n  \r\n  select @t_test_id= current_test_id \r\n  from t_testing \r\n  where t_testing_id = @t_testing_id\r\n  \r\n  select  @current_step_id=current_step_id\r\n  from t_testing_test \r\n  where  t_testing_id = @t_testing_id and \r\n  t_test_id = @t_test_id \r\n  \r\n  select @step_num=ts.step_num,@step=ts.step_order,\r\n\t@jsfile=isnull(js.file_name,'') \r\n  from t_test_step ts left outer join \r\n  t_test_step_js_file js on      \r\n\tts.t_test_step_js_file_id=js.t_test_step_js_file_id\r\n  where ts.t_test_step_id=@current_step_id  \r\n  \r\n  select @test_name=te.obj_name,@test_num=te.order_num,\r\n  @question_btn_mark=te.user_question_mark,\r\n  @back_btn_mark=te.back_btn_mark,\r\n  @CURRENT_STOP_TIME=CURRENT_STOP_TIME,\r\n  @stop_time_sec=stop_time_sec,\r\n  @count_stop_times=tt.count_stop_times,\r\n  @stop_times=te.stop_times,\r\n  @time_limit_min=te.timelimitmin,\r\n  @show_question_mark = te.show_question_mark\r\n  from t_test te inner join t_testing_test tt\r\n  on te.t_test_id=tt.t_test_id \r\n  where te.t_test_id=@t_test_id and tt.t_testing_id=@t_testing_id \r\n\r\n  select @step_count=count(t_test_step_id)  \r\n  from t_test_step \r\n  where t_test_id=@t_test_id\r\n\r\n  if  @count_stop_times<@stop_times\r\n  set @question_btn_mark='y'\r\n  else set @question_btn_mark='n'\r\n\r\n  if @time_limit_min>0\r\n     exec time_remaining @t_testing_id , @t_test_id , @seconds_remain  output \r\n\r\n\r\nend  \r\n\r\n\r\nselect \r\n@status as status,\r\n@step as step,\r\n@test_num as test_num,\r\n@t_test_id as t_test_id,\r\n@current_step_id as current_step_id,\r\n@last_step_id as last_step_id,\r\n@lang_num as lang_num,\r\n@lang_short_code as lang_short_code,\r\n@firstname as firstname,\r\n@secondname as secondname,\r\n@perscode as perscode,\r\n@test_name as test_name,\r\n@step_num  as step_num ,\r\n@step_count as  step_count,\r\n@back_btn_mark as  back_btn_mark,\r\n@question_btn_mark as question_btn_mark,\r\n@t_test_id as t_test_id,\r\n--@CURRENT_STOP_TIME as CURRENT_STOP_TIME,\r\n--@stop_time_sec as stop_time_sec,\r\n@seconds_remain as seconds_remain,\r\n@time_limit_min as time_limit_min,\r\n@count_stop_times as count_stop_times,\r\n@stop_times as stop_times ,\r\n@show_question_mark as show_question_mark,\r\n@jsfile as jsfile","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-03T12:06:45.473","LAST_ALTERED":"2011-06-05T14:32:19.717"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"dopass","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"dopass","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[dopass]\r\n@perscode varchar(12),\r\n@passw nvarchar(20),\r\n@t_testing_id uniqueidentifier output,\r\n@count int output\r\nas \r\n\r\n\r\nselect @count=count(w.t_testing_id)\r\nfrom t_workstation w \r\ninner join t_testing t on w.t_testing_id = t.t_testing_id \r\ninner join t_persona p on t.t_persona_id = p.t_persona_id \r\nwhere w.passw = @passw \r\nand perscode=@perscode\r\n\r\nif (@count=1)\r\nbegin\r\n\r\n  select @t_testing_id=w.t_testing_id\r\n  from t_workstation w \r\n  inner join t_testing t on w.t_testing_id = t.t_testing_id \r\n  inner join t_persona p on t.t_persona_id = p.t_persona_id \r\n  where w.passw = @passw \r\n  and perscode=@perscode\r\n\r\n\r\n\r\nend \r\nelse set @t_testing_id=null","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-04T18:05:22.993","LAST_ALTERED":"2010-11-30T09:46:26.100"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"select_tests","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"select_tests","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[select_tests]\r\n@t_testing_id uniqueidentifier\r\nas \r\nselect \r\nte.obj_name as test,  ts.obj_name as status\r\n,\r\n\r\ncase l.lang_num\r\n  when 2 then te.notes_lang2\r\n  when 3 then te.notes_lang3\r\n  else te.notes_lang1\r\nend as notes\r\n\r\nfrom t_testing_test  tt\r\ninner join t_test te on tt.t_test_id = te.t_test_id\r\ninner join t_testing_test_status ts \r\non tt.t_testing_test_status_id = ts.t_testing_test_status_id\r\ninner join t_testing t on tt.t_testing_id = t.t_testing_id\r\ninner join t_testing_language l on l.t_testing_language_id = t.t_testing_language_id\r\nwhere t.t_testing_id=@t_testing_id \r\norder by te.order_num","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-05T12:27:19.660","LAST_ALTERED":"2010-11-30T09:46:26.100"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"stat_change_prepared","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"stat_change_prepared","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"create procedure stat_change_prepared\r\n@t_testing_id uniqueidentifier \r\n\r\nas \r\n\r\nupdate t_testing\r\nset \r\nintroduction_viewed='y',\r\nt_testing_status_id = 5\r\nwhere t_testing_id = @t_testing_id\r\nand t_testing_status_id=4","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-05T14:34:58.510","LAST_ALTERED":"2010-11-30T09:46:26.100"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"test1","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"test1","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE proc test1\r\nas \r\n\r\ndeclare @t1 int ;\r\nselect @t1=1;\r\nreturn @t1\r\n\r\nexec donext  'E7FAB167-C47A-4865-A8AE-429FA778414C', 'a', 'E7FAB167-C47A-4865-A8AE-429FA778414C'","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2022-12-07T20:49:10.287","LAST_ALTERED":"2023-01-25T20:30:36.863"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"selupd_1print","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"selupd_1print","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[selupd_1print] \r\nas \r\ndeclare @t_testing_id uniqueidentifier\r\ndeclare @job_count int \r\n\r\nSET XACT_ABORT ON;\r\n\r\nset @t_testing_id= null\r\nset @job_count = null\r\n\r\nset @t_testing_id = (\r\nselect  top 1  t.t_testing_id \r\nfrom t_testing t \r\ninner join t_testing_status ts \r\non t.t_testing_status_id = ts.t_testing_status_id\r\nwhere ts.obj_name='ENDED'\r\nand datepart(day,t.obj_created)=datepart(day,getdate())\r\nand datepart(month,t.obj_created)=datepart(month,getdate())\r\nand datepart(year,t.obj_created)=datepart(year,getdate())\r\nand t.print_count=0 \r\norder by t.obj_created \r\n)\r\n\r\n\r\nset @job_count = (\r\nselect  count(t.t_testing_id) \r\nfrom t_testing t \r\ninner join t_testing_status ts \r\non t.t_testing_status_id = ts.t_testing_status_id\r\nwhere ts.obj_name='ENDED'\r\nand datepart(day,t.obj_created)=datepart(day,getdate())\r\nand datepart(month,t.obj_created)=datepart(month,getdate())\r\nand datepart(year,t.obj_created)=datepart(year,getdate())\r\nand t.print_count=0 \r\n)\r\n\r\nselect @t_testing_id as t_testing_id,@job_count as job_count\r\n\r\nSET XACT_ABORT OFF;","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-04-19T17:19:48.677","LAST_ALTERED":"2010-11-30T09:46:26.113"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"workstation_status","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"workstation_status","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[workstation_status] \r\n@t_workstation_id uniqueidentifier\r\n\r\n\r\n\r\nas \r\n\r\n\r\ndeclare  @t_test_id uniqueidentifier\r\n\r\ndeclare  @t_testing_id uniqueidentifier\r\ndeclare @start_date datetime\r\n\r\ndeclare @status varchar(10)\r\n\r\ndeclare @step int\r\ndeclare @test_num varchar(10) \r\ndeclare @current_step_id uniqueidentifier \r\n\r\n\r\nselect @t_testing_id=t_testing_id \r\nfrom t_workstation\r\nwhere t_workstation_id=@t_workstation_id\r\n\r\nif @t_testing_id is null \r\nbegin\r\nset @status='FREE'\r\nend\r\nelse\r\nbegin\r\n select @status=obj_name, \r\n \r\n @start_date=start_date \r\n\r\n from t_testing_status ts\r\n inner join t_testing t on ts.t_testing_status_id = t.t_testing_status_id\r\n where  t.t_testing_id = @t_testing_id\r\n\r\n if @status='TESTING' OR @status='INSTRUCT'\r\n begin\r\n  select @t_test_id= current_test_id \r\n  from t_testing \r\n  where t_testing_id = @t_testing_id\r\n  \r\n  select  @current_step_id=current_step_id\r\n  from t_testing_test \r\n  where  t_testing_id = @t_testing_id and \r\n  t_test_id = @t_test_id \r\n  \r\n  select @step=step_order\r\n  from t_test_step\r\n  where t_test_step_id=@current_step_id  \r\n  \r\n  select @test_num=order_num  \r\n  from t_test \r\n  where t_test_id=@t_test_id\r\n\/*\r\n  select @step_count=count(t_test_step_id)  \r\n  from t_test_step \r\n  where t_test_id=@t_test_id\r\n*\/\r\n end\r\n\r\n\r\n\r\n \r\nend\r\n\r\n\r\nselect @start_date as start_date,\r\n@status as status,\r\n@step as step,\r\n@test_num as test_num,\r\n@current_step_id as current_step_id,\r\n@t_testing_id as t_testing_id","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-02-26T11:49:34.993","LAST_ALTERED":"2010-11-30T09:46:26.113"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"get_common_introduction","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"get_common_introduction","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure get_common_introduction\r\n@t_testing_id uniqueidentifier\r\nas \r\nselect PAGE_USR_TEXT\r\nfrom t_testing_language tl \r\ninner join t_testing t on\r\ntl.t_testing_language_id = t.t_testing_language_id\r\nwhere t.t_testing_id = @t_testing_id","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-03-09T10:07:32.293","LAST_ALTERED":"2010-11-30T09:46:26.113"},{"SPECIFIC_CATALOG":"PSYCHOLOGY_TEST_1","SPECIFIC_SCHEMA":"dbo","SPECIFIC_NAME":"workstation_clear","ROUTINE_CATALOG":"PSYCHOLOGY_TEST_1","ROUTINE_SCHEMA":"dbo","ROUTINE_NAME":"workstation_clear","ROUTINE_TYPE":"PROCEDURE","ROUTINE_BODY":"SQL","ROUTINE_DEFINITION":"CREATE procedure [dbo].[workstation_clear] \r\n@t_workstation_id uniqueidentifier\r\nas \r\nSET XACT_ABORT ON;\r\nbegin transaction \r\n\r\ndeclare @t_testing_id uniqueidentifier\r\ndeclare @t_testing_status_id int\r\n\r\nselect @t_testing_id=t_testing_id \r\nfrom t_workstation\r\nwhere t_workstation_id=@t_workstation_id\r\n\r\nif @t_testing_id is not  null  \r\nbegin \r\n  update \r\n  t_workstation\r\n  set t_testing_id = null\r\n  where t_workstation_id=@t_workstation_id\r\n\r\n  select @t_testing_status_id=t_testing_status_id\r\n  from t_testing\r\n  where t_testing_id=@t_testing_id\r\n\r\n  if @t_testing_status_id<>3\r\n  begin\r\n    update t_testing\r\n    set t_testing_status_id=2,\r\n    current_test_id = null    \r\n    where t_testing_id=@t_testing_id\r\n\r\n    update t_testing_test\r\n    set t_testing_test_status_id=2,\r\n    current_step_id = null    \r\n    where t_testing_id=@t_testing_id\r\n\r\n\r\n  end\r\n\r\nend\r\ncommit tran","IS_DETERMINISTIC":"NO","SQL_DATA_ACCESS":"MODIFIES","SCHEMA_LEVEL_ROUTINE":"YES","MAX_DYNAMIC_RESULT_SETS":-1,"IS_USER_DEFINED_CAST":"NO","IS_IMPLICITLY_INVOCABLE":"NO","CREATED":"2010-02-26T15:33:37.103","LAST_ALTERED":"2010-11-30T09:46:26.113"}]