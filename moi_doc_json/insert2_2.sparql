insert {
  ?col mig:hasSqlName ?column_init.
  ?col mig:hasExpression ?expr .
} where 
{
?iri rdf:type mig:dashrenamedcolumn .  
?iri mig:column_init ?column_init .
?iri mig:column_renamed   ?column_renamed .
?iri mig:hasExpression ?expr .
?expr mig:hasMsDashTable ?table .
?col mig:hasMsDashTable ?table  .
?col rdf:type mig:DashColumn  . 
?col js:name ?column_renamed .  
?col js:name ?coljsname .  
};
#added 
insert {
  ?col mig:hasSqlName ?column_renamed.
  ?col mig:hasExpression ?expr .
  ?col mig:hasExportCalcSql ?hasCalculatedSql .
} where 

{
?iri rdf:type mig:dashaddedcolumn .  
?iri mig:column_init ?column_init .
?iri mig:column_renamed   ?column_renamed .
?iri mig:hasExpression ?expr .
?expr mig:hasMsDashTable ?table .
?col mig:hasMsDashTable ?table  .
?col rdf:type mig:DashColumn  . 
?col js:name ?column_init .  
?col js:name ?coljsname .  
optional {?iri mig:hasExportCalcSql ?hasCalculatedSql_init }  
  bind(coalesce(?hasCalculatedSql_init,'') as ?hasCalculatedSql)  
};


insert {
  ?col mig:hasSqlName ?jsname .
}

where {
  ?col rdf:type mig:DashColumn  . 
  ?col js:name ?jsname .
  optional {?col mig:hasSqlName ?sqlName}
  filter ( coalesce(?sqlName,'')='')
};

insert {
  ?tableTo mig:hasRelationFrom ?tableFrom.
  ?tableFrom mig:hasRelationshipFrom ?relat.
  ?tableTo mig:hasRelationshipTo ?relat.
  ?columTo mig:hasRelationshipColumnTo  ?relat .
  ?columFrom mig:hasRelationshipColumnFrom  ?relat .
  ?relat rdf:type mig:dashTableRelationship .
} where 
{
 ?iri rdf:type mig:msdash  .
 ?ch1 js:parentJsonId ?iri   .
 ?ch1  js:hasJsonObjectKey 'model' .
 ?relats js:parentJsonId ?ch1 . 
 ?relats js:hasJsonObjectKey "relationships" .
 ?relat js:parentJsonId  ?relats.
 ?relat js:fromTable  ?fromTable .
 ?relat js:toTable  ?toTable .  
 ?relat js:toColumn  ?toColumn .    
 ?relat js:fromColumn  ?fromColumn .      
 ?tableFrom  rdf:type mig:msDashTable .
 ?tableFrom js:name ?fromTable  .
 ?tableTo  rdf:type mig:msDashTable .
 ?tableTo js:name ?toTable  .  
 ?columFrom rdf:type mig:DashColumn .
 ?columFrom mig:hasMsDashTable ?tableFrom .
 ?columFrom js:name  ?fromColumn .

 ?columTo rdf:type mig:DashColumn .
 ?columTo mig:hasMsDashTable ?tableTo .
 ?columTo js:name  ?toColumn .

};

insert {?relat2 mig:hasParentRelationship ?relat1}
 where{
?relat1 rdf:type mig:dashTableRelationship .
?tableFrom1 mig:hasRelationshipFrom ?relat1.
?tableTo1 mig:hasRelationshipTo ?relat1.  
?tableTo1 mig:hasRelationshipFrom  ?relat2.
};

insert {?iri mig:hasPrefix ?tab_prefix .
?iri mig:hasExportSqlName ?tab_export_name .
}
where 
 {
?iri rdf:type mig:msDashTable .
?iri js:hasJsonObjectKey ?key .
?iri mig:hasSQLTableName ?tab_nam_sql .        
?iri mig:hasMsDash ?dash . 
?dash mig:hasPrefix  ?prefix .  
  bind (concat(?prefix,'_',?key )  as ?tab_prefix)  .
  bind (concat(?tab_prefix,'_', ?tab_nam_sql) as ?tab_export_name ) .   
};

insert 
{?iri mig:hasExportSqlName ?export_col_name}
where 
{ ?iri rdf:type mig:DashColumn .
  optional{?iri js:type ?coltype} .
  ?iri js:hasJsonObjectKey ?key .
  ?iri mig:hasSqlName ?sqlName .
  ?iri mig:hasMsDashTable ?table .
#  ?table mig:hasMsDash js:Nbf85e8d1889344f2a3a26f5fbcfa4c70 .
#  ?table mig:hasPrefix ?tab_prefix .  
  ?table js:hasJsonObjectKey ?tab_key .  
 optional{?iri mig:hasExportCalcSql ?hasCalculatedSql} . 
  bind( 
    IF(coalesce(?coltype,'')="calculated" || coalesce(?coltype,'')="calculatedTableColumn" || coalesce(?hasCalculatedSql,'')!='', concat('calc_t',?tab_key,'_',?key ),
      concat('t',?tab_key,'_',?key,'_',?sqlName)  )
     as ?export_col_name
    )	
#    
};

insert {?parent js:expression ?join_str} where 
{
?iri js:jsstringjoin ?join_str .
?iri js:parentJsonId ?parent . 
?parent rdf:type mig:DashColumn .  
  optional {?parent js:expression ?express  } .
  filter (coalesce(?express,'')='')  
};      

#insert {
#?iri mig:hasSqlName ?sqlname .
#}
#where {?iri mig:hasSQLname ?sqlname .};
