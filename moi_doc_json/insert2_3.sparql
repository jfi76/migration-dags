delete {?column  mig:hasPostgresSql ?sql} where {?column  mig:hasPostgresSql ?sql}; 
delete {?column  mig:hasClickSql ?sql} where {?column  mig:hasClickSql ?sql};

insert {?dax rdf:type mig:tansformed_click .
?dax mig:hasColumn ?column .
?column  mig:hasClickSql ?sql .  
} where 
{?iri rdf:type js:FileJson .
?iri etl:hasSourceFile ?filename .
  filter (contains(?filename,'dax_click.json'))
?child1 js:parentJsonId ?iri .
?dax js:parentJsonId ?child1 .  
?dax js:tableName ?tableName .
?dax js:colname ?colname .
?dax js:sql ?sql .  
?column rdf:type mig:DashColumn .  
?column  js:expression ?exp.
?column js:name ?colname .
?column mig:hasMsDashTable ?table .  
?table js:name ?tableName  .  
};
insert {?dax rdf:type mig:tansformed_postgres .
?dax mig:hasColumn ?column .
?column  mig:hasPostgresSql ?sql .  
} where 
#
#
{?iri rdf:type js:FileJson .
?iri etl:hasSourceFile ?filename .
  filter (contains(?filename,'sql_answ_dax.json'))
?child1 js:parentJsonId ?iri .
?dax js:parentJsonId ?child1 .  
?dax js:tableName ?tableName .
?dax js:colname ?colname .
?dax js:sql ?sql .  
?column rdf:type mig:DashColumn .  
?column  js:expression ?exp.
?column js:name ?colname .
?column mig:hasMsDashTable ?table .  
?table js:name ?tableName  .  
};

insert {?iri mig:hasMainSqlName ?hasMainSqlName }where 

{  
?iri rdf:type mig:dashmart .
?iri mig:label  ?hasSourceFile .
?iri mig:hasOrder ?order .      
?iri mig:hasMsDash ?dash .  
?dash mig:hasPrefix ?pref .  
bind( 'Reports_duk.distrib_' + ?pref +'_fact_'+ str(?order) as   ?hasMainSqlName  ) .
};
insert {?iri rdf:type mig:dashlayouttable . ?qr  rdf:type mig:mslayoutrows . ?qr mig:hasLayoutTable  ?iri
. ?qr rdf:type mig:queryref 
 } where
{
  
  ?iri rdf:type mig:DashVisualContainer .
  ?lev1 mig:hasVisualContainer ?iri .
  ?sect js:parentJsonId ?lev1 .
  ?sect js:hasJsonObjectKey "singleVisual" .
  ?sect  js:visualType ?vctype .
  ?proj js:parentJsonId ?sect .
  ?proj js:hasJsonObjectKey "projections" .
  ?rows js:parentJsonId ?proj .
  ?rows js:hasJsonObjectKey "Rows" .
  ?qr js:parentJsonId ?rows .
  ?qr js:queryRef ?group_by_cols .
};

insert {?v rdf:type mig:mslayoutvalues . ?v mig:hasLayoutTable  ?iri . ?v rdf:type mig:queryref . ?v rdfs:label ?aggr_cols  } where
{
  
  ?iri rdf:type mig:DashVisualContainer .
  ?lev1 mig:hasVisualContainer ?iri .
  ?sect js:parentJsonId ?lev1 .
  ?sect js:hasJsonObjectKey "singleVisual" .
  ?sect  js:visualType ?vctype .
  ?proj js:parentJsonId ?sect .
  ?proj js:hasJsonObjectKey "projections" .
  ?values js:parentJsonId ?proj .
  ?values js:hasJsonObjectKey "Values" .
  ?v js:parentJsonId ?values .
  ?v js:queryRef ?aggr_cols .
};

#insert {?qr rdf:type mig:queryref . ?qr mig:hasLayoutTable  ?iri  } where 
#{
#  ?iri rdf:type mig:DashVisualContainer .
#  ?lev1 mig:hasVisualContainer ?iri .
#  ?sect js:parentJsonId ?lev1 .
#  ?sect js:hasJsonObjectKey  "singleVisual" .
#  #?sect  js:visualType "pivotTable" .
#  ?qr js:parentJsonId*	?sect .
#  ?qr js:queryRef ?queryref .};


#insert {?name mig:hasLayoutTable ?iri . 
#  ?qr mig:hasColProtQuery  ?proj .
#  ?qr mig:hasProtoColItem ?protoItem  .
#  ?qr mig:hasProtoName ?name .
  
#} where 

#{  
#  ?iri rdf:type mig:DashVisualContainer .
#  ?lev1 mig:hasVisualContainer ?iri .
#  ?sect js:parentJsonId ?lev1 .
#  ?sect js:hasJsonObjectKey "singleVisual" .
#  ?sect  js:visualType "pivotTable" .
#  ?proj js:parentJsonId ?sect .
#  ?proj js:hasJsonObjectKey* "prototypeQuery" .
#  ?name js:Name ?layoutcolName .
#  ?qr rdf:type mig:queryref .  
#  ?qr js:queryRef ?layoutcolName .
#  ?name js:parentJsonId ?protoItem .  
#};




insert {
  ?iri  mig:hasMsDash ?dash . 
  ?qr mig:hasColumn ?dcol . ?qr mig:hasLayoutType ?col_agg . ?qr mig:hasAggFunc ?aggfun . ?qr mig:hasAggOrCol ?obj  } where 
{
  ?iri rdf:type mig:DashVisualContainer .
  ?iri   js:parentJsonId ?p1.
  ?p1 js:parentJsonId ?p2 .
  ?p2  mig:hasMsDash ?dash .
  ?lev1 mig:hasVisualContainer ?iri .
  ?sect js:parentJsonId ?lev1 .
  ?sect js:hasJsonObjectKey "singleVisual" .
  ?sect  js:visualType ?vctype .
  ?proj js:parentJsonId ?sect .
  ?proj js:hasJsonObjectKey "prototypeQuery" .
  ?from js:parentJsonId ?proj .
  ?from js:hasJsonObjectKey 'From' .
  ?from_items js:parentJsonId ?from .	
  ?from_items js:Name ?from_alias .
  ?from_items js:Entity ?from_table_name .
  ?table  mig:hasMsDash ?dash .
  ?table js:name ?from_table_name  .
  ?table rdf:type mig:msDashTable .
  ?select js:parentJsonId ?proj .
  ?select js:hasJsonObjectKey 'Select' .
  ?selarr js:parentJsonId ?select .
  ?selarr js:Name ?jsname .
  ?obj js:parentJsonId ?selarr .
  ?qr rdf:type mig:queryref .  
  ?qr js:queryRef ?jsname .
  ?qr mig:hasLayoutTable ?iri .
  ?obj js:hasJsonObjectKey ?col_agg .
  optional {?obj js:Function ?aggfun}
  optional {?obj js:Property ?colname .
  ?expr2 js:parentJsonId ?obj .  
  ?expr2 js:hasJsonObjectKey 'Expression' .
  ?srf js:parentJsonId ?expr2 .  
  ?srf js:hasJsonObjectKey 'SourceRef'.  
  ?srf js:Source ?qrSource . 
  }
  optional {?expr js:parentJsonId ?obj .
   ?expr js:hasJsonObjectKey 'Expression' .
   ?prop js:parentJsonId ?expr .
    ?prop js:Property ?colname .
  ?col  js:parentJsonId ?expr .
  ?col  js:hasJsonObjectKey 'Column' . 
  ?expr2 js:parentJsonId ?col  .  
  ?expr2 js:hasJsonObjectKey 'Expression' .
  ?srf js:parentJsonId ?expr2 .  
  ?srf js:hasJsonObjectKey 'SourceRef'.  
  ?srf js:Source ?qrSource . 
  }
  ?dcol mig:hasMsDashTable ?table .  
  ?dcol mig:hasMsDash ?dash . 
  ?dcol rdf:type mig:DashColumn .  
  ?dcol js:name ?colname .  
  filter(?qrSource=?from_alias)      
  #?prop js:parentJsonId* ?obj .
  #?prop js:hasJsonObjectKey 'Property' .
  
#  ?prop js:parentJsonId ?obj .
#  ?prop js:hasJsonObjectKey ?pnam .
};

insert {?qr mig:hasVisualContColumnName ?names . ?qr mig:hasDisplayName ?colDisplayName .  }
where 
{
  ?iri rdf:type mig:DashVisualContainer .
  ?iri   js:parentJsonId ?p1.
  ?p1 js:parentJsonId ?p2 .
  ?p2  mig:hasMsDash ?dash .
  ?lev1 mig:hasVisualContainer ?iri .
  ?sect js:parentJsonId ?lev1 .
  ?sect js:hasJsonObjectKey "singleVisual" .
  ?sect  js:visualType ?vctype .
  ?colP js:parentJsonId ?sect .
  ?colP js:hasJsonObjectKey "columnProperties" .
  ?qr rdf:type mig:queryref .
  ?qr js:queryRef ?qrref .  
  ?qr mig:hasLayoutTable ?iri .  
  ?names js:parentJsonId ?colP .
  ?names js:displayName ?colDisplayName .
  ?names js:hasJsonObjectKey ?qrref .    
};

insert {?iri mig:hasFilterType ?typeName . } where 
{
  ?iri rdf:type mig:DashVisualContainer .
  ?iri   js:parentJsonId ?p1.
  ?p1 js:parentJsonId ?p2 .
  ?p2  mig:hasMsDash ?dash .
  ?lev1 mig:hasVisualContainer ?iri .
  ?sect js:parentJsonId ?lev1 .
  ?sect js:hasJsonObjectKey "singleVisual" .
  ?sect  js:visualType ?vctype .
  ?colO js:parentJsonId ?sect .
  ?colO js:hasJsonObjectKey "objects" .
  ?data js:parentJsonId ?colO	.
  ?data js:hasJsonObjectKey "data" .
  ?arr js:parentJsonId ?data .
  ?prop js:parentJsonId  ?arr .
  ?prop  js:hasJsonObjectKey "properties" .
  ?mode	 js:parentJsonId	?prop .
  ?mode  js:hasJsonObjectKey "mode" .
  ?expr js:parentJsonId ?mode .
  ?expr js:hasJsonObjectKey 'expr' .
  ?lit js:parentJsonId ?expr .
  ?lit js:hasJsonObjectKey "Literal"  .  
  ?lit js:Value ?typeName .
};
insert {?iri rdf:type mig:dashfilter} where {
?iri rdf:type mig:DashVisualContainer .
?iri mig:hasDasVisualType "slicer"  .
};
insert {?iri rdf:type mig:dashfilter} where {
?iri rdf:type mig:DashVisualContainer .
?iri mig:hasDasVisualType "slicer"  .
};
insert {?col mig:hasCulturalName ?cultName . ?col mig:hasCultBinding ?binding } where 
{ ?dash rdf:type mig:msdash .
  ?col rdf:type mig:DashColumn .
  ?col mig:hasMsDash ?dash .
  ?col js:name ?jsname .
  ?col mig:hasMsDashTable ?table .
  ?table js:name ?tabname .
#  bind (LCASE (concat(?tabname,'.', ?jsname )) as ?colfullname )
  ?model js:parentJsonId ?dash .
  ?model js:hasJsonObjectKey "model" .
  ?cultures js:parentJsonId ?model .
  ?cultures js:hasJsonObjectKey "cultures" .
  ?item js:parentJsonId* ?cultures .
  ?item js:hasJsonObjectKey "Terms" .
  ?item js:parentJsonId ?parent .
  ?definition js:parentJsonId ?parent .
  ?definition js:hasJsonObjectKey "Definition" . 
  ?binding js:parentJsonId ?definition .
  ?binding js:hasJsonObjectKey "Binding" .
  ?binding js:ConceptualEntity ?tabname .
  ?binding js:ConceptualProperty ?jsname .
  #bind(concat(?ConceptualEntity ,'.',))
  #?item js:hasJsonObjectKey ?colfullname.  
  ?cularr js:parentJsonId ?item .
  ?cul js:parentJsonId  ?cularr .
  ?cul  js:hasJsonObjectKey ?cultName  .      
};

insert {
        ?container mig:hasSection ?section .
        } 
      where 
 {    

  ?section rdf:type mig:DashSection.
  ?containers js:parentJsonId  ?section.
  ?containers js:hasJsonObjectKey 'visualContainers' .
  ?container js:parentJsonId ?containers .
  ?container rdf:type mig:DashVisualContainer .
  };


